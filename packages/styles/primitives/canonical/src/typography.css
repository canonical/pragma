/*
TODO
- conditional (?) font size increase on large screens
- different heading sizes/spacing on different screen sizes
- how to make very opinionated styles (heading sizes in pairs, margin collapsing between them, etc) configurable/themable?
*/

:root {
  --font-family-sans:
    "Ubuntu variable", "Ubuntu", -apple-system, "Segoe UI", "Roboto", "Oxygen",
    "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  --font-family-mono:
    "Ubuntu Mono variable", "Ubuntu Mono", Consolas, Monaco, Courier, monospace;
  --text-max-width: 40em;
  --font-size: 16px;
}

:root {
  --baseline-height: 0.5rem;
  --ascender: 830;
  --descender: -170;
  --units-per-em: 1000;
}

html {
  color: #000;
  font-family: var(--font-family-sans);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-weight: 400;
  font-size: var(--font-size);
  line-height: var(--line-height-default);
  text-wrap: pretty;
}

/* FIXME: we would need to add many more selectors here, everything that is a heading (in components) */
p,
h1,
h2,
h3,
h4,
h5,
h6,
a {
  max-width: var(--text-max-width);
  font-weight: var(--font-weight);
}

p {
  --font-size: 1rem;
  --line-height-multiplier: 3;
  --space-after: 3;
  --font-weight: 400;
}

h1 {
  --line-height-multiplier: 6;
  --font-size: 2.5rem;
  --space-after: 3;
  --font-weight: 550;
}

h2 {
  --line-height-multiplier: 6;
  --font-size: 2.5rem;
  --space-after: 3;
  --font-weight: 180;
}

h3 {
  --line-height-multiplier: 4;
  --font-size: 1.5rem;
  --space-after: 1;
  --font-weight: 550;
}

h4 {
  --line-height-multiplier: 4;
  --font-size: 1.5rem;
  --space-after: 1;
  --font-weight: 275;
}

h5,
h6 {
  --line-height-multiplier: 3;
  --font-size: 1rem;
  --space-after: 2;
  --font-weight: 400;
}

/*
    TODO what is the best way to implement focus in a reusable way?
    TODO how much of this should be in the styles package (applied to the <a> tag) instead of in an implementation library?
    For reference, Vanilla used a `vf-focus-themed` mixin with SCSS https://github.com/canonical/vanilla-framework/blob/6af35433368f82d76d8deb7effebca47b434ee76/scss/_global_functions.scss#L64-L101
     Note, one option for enabling `focus-visible` on older browsers that don't support it is to use lightningCSS to to map to CSS classes, which would allow us to use a focus-visible polyfill
     https://lightningcss.dev/transpilation.html#pseudo-class-replacement
 */
a {
  color: var(--tmp-color-text-link-default);
  text-decoration: none;

  &:focus {
    outline-offset: 0;
  }

  &:hover {
    cursor: pointer;
    text-decoration: underline;
    text-decoration-thickness: var(--tmp-dimension-decoration-thickness-link);
    text-underline-offset: var(--tmp-dimension-underline-offset-link);
  }

  &:visited {
    color: var(--tmp-color-text-link-visited);
  }
}
